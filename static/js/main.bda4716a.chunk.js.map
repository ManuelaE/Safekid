{"version":3,"sources":["stores/Store.js","utils/StoreFirebase.js","utils/StorageFirebase.js","utils/AuthFirebase.js","utils/firebaseInit.js","utils/firebaseCredentials.js","components/App.jsx","serviceWorker.js","index.jsx"],"names":["Store","text","setTimeout","val","this","decorate","observable","setText","action","setRef","ref","add","doc","collection","then","docRef","console","log","id","catch","error","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebase","auth","store","storage","init","AuthFirebase","StoreFirebase","StorageFirebase","App","observer","props","state","startTime","step","childrenAmount","parentsAmount","years","relationship","documentType","response","name","reg","age","responseParents","celphone","documentT","docNum","kinship","firebaseInit","handleChange","bind","prop","index","temp","setState","className","onClick","Date","now","Array","map","child","key","type","placeholder","onChange","e","target","value","option","i","prev","parent","handleChange2","resp","y","j","finalhour","startTimeDate","getHours","getMinutes","finalHourDate","padres","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bda4716a.chunk.js","sourcesContent":["import { decorate, computed, action, observable } from 'mobx';\n\nclass Store {\n\n    text = 'el nuevo text';\n\n    constructor(){\n        setTimeout(() => {\n            this.text = 'el otro nuevo text'\n        }, 5000);\n    }\n\n    setText (val) {\n        this.text = val;\n    }\n   /* @observable var = '';\n\n    \n    \n    \n\n    @computed get currentDate(){\n        return \"something operationalizable\";\n    }*/\n}\n\ndecorate(Store, {text: observable, setText: action});\n\nconst STORE = new Store();\nexport default STORE;","let Store = null;\n\nfunction setRef (ref) { Store = ref }\n\nfunction add(doc) {\n    Store.collection(\"users\").add(doc)\n    .then(function(docRef) {\n        console.log(\"Document written with ID: \", docRef.id);\n    })\n    .catch(function(error) {\n        console.error(\"Error adding document: \", error);\n    });\n}\n\nexport default {setRef, add};","let Storage = null;\n\nfunction setRef (ref) { Storage = ref }\n\nexport default {setRef};","let Auth = null;\n\nfunction setRef (ref) { Auth = ref }\n\nexport default {setRef};","import * as firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nimport \"firebase/storage\";\n\nimport firebaseCredentials from \"./firebaseCredentials\";\n\nimport StoreFirebase from \"./StoreFirebase\";\nimport StorageFirebase from \"./StorageFirebase\";\nimport AuthFirebase from './AuthFirebase';\n\nconst firebaseConfig = firebaseCredentials;\nfirebase.initializeApp(firebaseConfig);\n\nconst auth = firebase.auth();\nconst store = firebase.firestore();\nconst storage = firebase.storage();\n\nfunction init() {\n    AuthFirebase.setRef(auth);\n    StoreFirebase.setRef(store);\n    StorageFirebase.setRef(storage);\n}\n\nexport default {init};","export default {\n    apiKey: \"AIzaSyAffjFRoWJeSIp_phT5uqbLE6RsMZhO-Fw\",\n    authDomain: \"finalweb-4ac24.firebaseapp.com\",\n    databaseURL: \"https://finalweb-4ac24.firebaseio.com\",\n    projectId: \"finalweb-4ac24\",\n    storageBucket: \"finalweb-4ac24.appspot.com\",\n    messagingSenderId: \"467630835855\",\n    appId: \"1:467630835855:web:961b632d486820b80c48fa\"\n};","import React from 'react';\n//import './App.css';\n\nimport {\n  HashRouter as Router,\n  Route,\n  Switch,\n} from 'react-router-dom';\nimport { observer } from 'mobx-react';\nimport STORE from '../stores/Store';\nimport firebaseInit from '../utils/firebaseInit';\nimport StoreFirebase from '../utils/StoreFirebase';\n\nconst App = observer(class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      startTime: 0,\n      step: 0,\n      childrenAmount: 1,\n      parentsAmount: 1,\n      years: ['Selecciona', 'Entre 0 y 6 Meses', 'Entre 7 y 12 Meses', '1 año', '2 años', '3 años', '4 años', '5 años', '6 años', '7 años', '8 años'],\n      relationship: ['Selecciona', 'Padre', 'Madre', 'Abuel@', 'Ti@', 'Amig@'],\n      documentType: ['Selecciona', 'Cédula ciudania', 'Cédula extranjera', 'Otros'],\n      response: [{ name: '', reg: '', age: '' }],\n      responseParents: [{ celphone: '', name: '', documentT: '', docNum: '', kinship: '' }]\n    };\n\n    firebaseInit.init();\n    this.handleChange = this.handleChange.bind(this);\n\n  }\n\n\n\n  handleChange(prop, val, index) {\n\n    let temp = this.state.response;\n    temp[index][prop] = val;\n\n    this.setState({ response: temp });\n\n  }\n\n  handleChange2(prop, val, index) {\n\n    let temp = this.state.responseParents;\n    temp[index][prop] = val;\n\n    this.setState({ responseParents: temp });\n\n  }\n\n  render() {\n    return (this.state.step === 0 ?\n\n      <div className=\"start\">\n\n        <nav>\n          <h1 className='title'>SafeKids</h1>\n        </nav>\n\n        <div className='divText'>\n          <p>En compañía de la Universidad Icesi y la Fundación Valle del Lili (FVL), se ha creado un nuevo sistema de registro de ingreso y salida de los menores de edad a la FVL, \n            con el fin de garantizar la seguridad de los mismos y acortar el tiempo que se toman los padres al realizar este proceso. <br></br>   <br></br> \n            Este, se divide en dos momentos: uno es un registro en línea y el otro, es el ingreso y salida de la institución. El primero tiene como fin, que el registro de la información personal de padres y niños, se pueda realizar desde casa y una sola vez. El segundo, se enfoca en la validación de la información ya registrada para realizar un ingreso rápido, además, para la salida se pide la cédula física a los padres y se verifica la información, garantizando la seguridad de los niños.</p>\n        </div>\n\n\n        <div className='divStart'>\n          <button className='btn' onClick={() => {\n            this.setState({ step: 1, startTime: Date.now() })\n          }}>Empezar registro</button>\n        </div>\n\n      </div>\n\n      :\n\n      <div className=\"App\">\n        <nav>\n          <h1 className='title'>SafeKids</h1>\n        </nav>\n\n        {[...Array(this.state.childrenAmount)].map(\n          (child, index) =>\n            <div className='child' key={index}>\n              <div className='titleReg'>\n                <h3>Niño {index + 1}</h3>\n                <input type=\"text\" className=\"inpt\" placeholder=\"Nombres\"\n                  onChange={e => this.handleChange('name', e.target.value, index)} value={this.state.response[index].name} />\n\n                <input type=\"number\" className=\"inpt\" placeholder=\"No. Registro Civil de Nacimiento\"\n                  onChange={e => this.handleChange('reg', e.target.value, index)} value={this.state.response[index].reg} />\n                <select id=\"years\" name=\"Edades\" onChange={e => this.handleChange('age', e.target.value, index)} value={this.state.response[index].age} >\n                  {this.state.years.map((option, i) =>\n                    <option key={i} value={option}>{option}</option>)}\n                </select>\n              </div>\n\n            </div>\n        )\n        }\n\n        <div className='btns'>\n          <button className='btn' onClick={() => {\n            this.setState((prev) => { return { childrenAmount: prev.childrenAmount + 1, response: [...prev.response, {}] } })\n          }}>Agregar niño</button>\n\n          {(this.state.childrenAmount - 1) > 0 && <button className='btn' onClick={() => {\n            this.setState((prev) => { return { childrenAmount: prev.childrenAmount - 1 } })\n          }}>Eliminar Niño</button>}\n\n        </div>\n\n        {[...Array(this.state.parentsAmount)].map(\n          (parent, i) => <div className='parent' key={i}>\n\n            <div className='titleReg'>\n\n              <h3> Acompañante {i + 1}</h3>\n              <input type=\"text\" className=\"inpt\" placeholder=\"Nombres\"\n                onChange={e => this.handleChange2('name', e.target.value, i)} value={this.state.responseParents[i].name} />\n\n              <select id=\"docType\" name=\"document\" onChange={e => this.handleChange2('documentT', e.target.value, i)} value={this.state.responseParents[i].documentT}>\n                {this.state.documentType.map((option, i) =>\n                  <option key={i} value={option}>{option}</option>)}\n              </select>\n\n              <input type=\"text\" className=\"inpt\" placeholder=\"Número de documento\"\n                onChange={e => this.handleChange2('docNum', e.target.value, i)} value={this.state.responseParents[i].docNum} />\n\n              <input type=\"number\" className=\"inpt\" placeholder=\"Celular\"\n                onChange={e => this.handleChange2('celphone', e.target.value, i)} value={this.state.responseParents[i].celphone} />\n\n              <select id=\"family\" name=\"Parentesco\" onChange={e => this.handleChange2('kinship', e.target.value, i)} value={this.state.responseParents[i].kinship}  >\n                {this.state.relationship.map((option, i) =>\n                  <option key={i} value={option}>{option}</option>)}\n              </select>\n            </div>\n\n          </div>\n        )\n        }\n\n        <div className='btns'>\n          <button className='btn' onClick={() => {\n            this.setState((prev) => { return { parentsAmount: prev.parentsAmount + 1, responseParents: [...prev.responseParents, {}] } })\n          }}>Agregar padre</button>\n\n          {(this.state.parentsAmount - 1) > 0 && <button className='btn' onClick={() => {\n            this.setState((prev) => { return { parentsAmount: prev.parentsAmount - 1 } })\n          }}>Eliminar padre</button>}\n\n        </div>\n\n        <div className='btns'>\n          <button className=\"btn\" onClick={() => {\n            setTimeout(() => {\n              this.state.response.map(resp => {\n                let i = new Date(this.state.startTime);\n                let y = Date.now();\n                let j = new Date(y);\n\n\n                StoreFirebase.add({\n                  ...resp,\n                  startTime: this.state.startTime,\n                  finalhour: y,\n                  startTimeDate: i.getHours() + ':' + i.getMinutes(),\n                  finalHourDate: j.getHours() + ':' + j.getMinutes(),\n                  padres: [...this.state.responseParents]\n                })\n              }, 500);\n              \n            }, 500);\n\n            setTimeout(() => this.setState(\n              {\n                step: 0,\n                response: [{ name: '', reg: '', age: '' }],\n                responseParents: [{ celphone: '', name: '', documentT: '', docNum: '', kinship: '' }]\n              }), 700);\n          }}>Guardar</button>\n\n        </div>\n\n        {/*\n        {STORE.text}\n         decomentar el router al probar que funciona \n        <Router basename=\"\">\n          <header>\n            {//maybe you need a logo or nav right here to be always present\n            }\n          </header>\n  \n          <Switch>\n            <Route exact path=\"/\" component={} />\n          </Switch>\n  \n          <footer>\n            {//maybe your footer should be always present\n            }\n          </footer>\n        </Router>\n          */}\n      </div>\n    );\n  }\n});\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}